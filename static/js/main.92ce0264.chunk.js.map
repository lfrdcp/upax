{"version":3,"sources":["data/rules.js","components/TextFieldX.jsx","components/TextFieldPasswordX.jsx","components/SnackbarX.jsx","components/ButtonSubmitX.jsx","components/GridCenterX.jsx","components/ProgressX.jsx","components/avatar/AvatarCircle.jsx","components/card/CardTrans.jsx","assets/img/logo.png","components/logoAuth/LogoAuth.jsx","hooks/useSnackbar.jsx","redux/actions/userAction.js","components/card/CardHeaderX.jsx","views/authentication/login/LoginView.jsx","components/card/CardMainX.jsx","data/api.js","data/url.js","hooks/useAxiosError.jsx","hooks/useIsMounted.jsx","data/axiosCancelToken.js","hooks/useAxios.jsx","data/errors.js","redux/actions/employeeAction.js","views/employee/TableEmployee.jsx","views/employee/CreateEmployee.jsx","views/employee/ViewEmployee.jsx","views/upload/UploadImages.jsx","routes/DashboardRoutes.jsx","components/the/TheButtonLogOut.jsx","components/the/TheNavbar.jsx","components/the/TheList.jsx","components/the/TheDrawer.jsx","routes/PrivateRoute.jsx","routes/PublicRoute.jsx","routes/AppRouter.jsx","redux/reducers/userReducer.js","redux/reducers/employeeReducer.js","redux/reducers/rootReducers.js","redux/store.js","theme.js","App.jsx","index.js"],"names":["firstAndSecondNameRule","required","value","message","pattern","passwordRule","emailRule","TextFieldX","name","error","typeField","label","validations","ComponentIcon","componentIcon","defaultValue","pasteDisable","copyDisable","React","useState","colorIcon","data","setData","Grid","container","spacing","alignItems","item","xs","sm","color","TextField","onPaste","e","preventDefault","onCopy","onChange","onFocus","onBlur","helperText","type","variant","margin","fullWidth","inputRef","TextFieldPasswordX","showPassword","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","Visibility","VisibilityOff","SnackbarX","handleClose","Alert","props","elevation","Snackbar","open","openX","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","typeX","messageX","ButtonSubmitX","text","classes","useStyles","Button","className","submit","makeStyles","theme","background","GridCenterX","children","justify","style","minHeight","ProgressX","show","LinearProgress","AvatarCircle","Avatar","large","Box","width","height","CardTrans","Card","borderTopRightRadius","boxShadow","LogoAuth","CardMedia","backgroundSize","image","logo","title","useSnackbar","snackbar","setSnackbar","reason","SET_USER","setUserAction","payload","CardHeaderX","titleX","subtitleX","variantX","align","CardHeader","titleTypographyProps","subheader","subheaderTypographyProps","LoginView","history","useHistory","dispatch","useDispatch","useForm","register","errors","handleSubmit","loading","setLoading","md","lg","xl","onSubmit","email","setTimeout","localStorage","setItem","replace","CardContent","MailOutlineOutlinedIcon","password","Divider","CardMainX","axios","create","baseURL","responseType","headers","useAxiosError","checkError","eUn","status","response","e400","e404","e500","useIsMounted","isMounted","useRef","useEffect","current","axiosCancelToken","source","CancelToken","cancel","useAxios","url","setloading","isMountedLoad","apiAxios","method","success","rest","API","cancelToken","token","then","r","catch","msg500","msg404","msg400","msgUn","errorReadEmployees","errorCreateEmployee","SET_EMPLOYEES","ADD_EMPLOYEE","RESET_EMPLOYEES","TableEmployee","employeeReducer","useSelector","state","employees","setEmployees","search","setSearch","requestSearch","searchedVal","filteredEmployees","filter","row","toLowerCase","includes","employeesWithDate","map","employee","birthday","date","moment","format","placeholder","searchVal","onCancelSearch","marginTop","rows","columns","field","headerName","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","CreateEmployee","reset","Date","setDate","formatDate","params","id","length","PersonIcon","last_name","utils","MomentUtils","locale","Typography","DatePicker","autoOk","orientation","openTo","ViewEmployee","UploadImages","images","setImages","setCurrent","useDropzone","accept","onDrop","acceptedFiles","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","arrayImages","index","src","alt","backgroundColor","Container","Fragment","path","component","to","TheButtonLogOut","Tooltip","removeItem","offset","mixins","toolbar","menuButton","marginRight","breakpoints","up","display","flexGrow","appBar","marginLeft","TheNavbar","AppBar","Toolbar","edge","openDrawerAction","TheList","selectedIndex","setSelectedIndex","List","ListItem","button","Link","selected","ListItemIcon","HomeOutlined","ListItemText","primary","avatar","palette","getContrastText","drawer","flexShrink","drawerPaper","root","TheDrawer","userReducer","user","getItem","Drawer","anchor","paper","charAt","content","padding","Squema","openDrawer","setOpenDrawer","Hidden","mdDown","lgUp","PrivateRoute","Component","PublicRoute","AppRouter","exact","DashboardRoutes","action","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","createTheme","typography","fontFamily","h4","textTransform","default","main","secondary","warning","info","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92ce0264.chunk.js","sourcesContent":["export const firstAndSecondNameRule = {\n  required: {\n    value: true,\n    message: 'It cant be empty',\n  },\n  pattern: {\n    value: /^[\\s\\S]{1,30}$/,\n    message: 'Cannot exceed 30 characters',\n  },\n};\n\nexport const passwordRule = {\n  required: {\n    value: true,\n    message: 'Debes ingresar tu contraseña',\n  },\n  pattern: {\n    value: /^[\\s\\S]{6,}$/,\n    message: 'La contraseña debe tener 6 o más caracteres',\n  },\n};\n\nexport const emailRule = {\n  required: {\n    value: true,\n    message: 'Debes ingresar tu correo',\n  },\n  pattern: {\n    value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/,\n    message: 'El correo tiene un formato no valido',\n  },\n};\n","import React from 'react';\nimport { Grid, TextField } from '@material-ui/core';\n/**\n * @summary Keyboard input, with dynamic icon and input type\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {string} name Input name\n * @param {Array} error Error provided by {@link https://react-hook-form.com/|React Hook Form} library\n * @param {('email'| 'number'| 'text')} typeField Input type\n * @param {string} label Input text\n * @param {func} validations Validations (register) provided by {@link https://react-hook-form.com/|React Hook Form} library\n * @param {func} componentIcon Icon provided by {@link https://material-ui.com/es/components/material-icons/|Material UI icons }\n * @param {string} [defaultValue = ''] Default value in input\n *\n * @example\n * import { useForm } from 'react-hook-form';\n * const { register, errors, handleSubmit } = useForm();\n *\n * <TextFieldX\n *  error={errors?.name?.message}\n *  name=\"name\"\n *  typeField=\"text\"\n *  label=\"Nombre\"\n *  componentIcon={AssignmentIndOutlinedIcon}\n *  validations={register({...nameRule,setValueAs: (value) => value,})}\n *  defaultValue={user.name}\n * />\n */\nconst TextFieldX = ({\n  name,\n  error,\n  typeField,\n  label,\n  validations,\n  componentIcon: ComponentIcon,\n  defaultValue = '',\n  pasteDisable = false,\n  copyDisable = false\n}) => {\n  const [data, setData] = React.useState({\n    colorIcon: 'inherit',\n  });\n\n  const onPaste = (e) => {\n    e.preventDefault();\n    return false;\n  };\n\n  const onCopy = (e) => {\n    e.preventDefault();\n    return false;\n  };\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={2} sm={1}>\n        <ComponentIcon color={error ? 'error' : data.colorIcon} />\n      </Grid>\n      <Grid item xs={10} sm={11}>\n        <TextField\n          {...(pasteDisable ? {onPaste: onPaste} : { })}\n          {...(copyDisable ? { onCopy: onCopy } : {})}\n          onChange={() => {\n            !error && setData({ ...data, colorIcon: 'primary' });\n          }}\n          onFocus={() => {\n            !error && setData({ ...data, colorIcon: 'primary' });\n          }}\n          onBlur={() => {\n            !error && setData({ ...data, colorIcon: 'inherit' });\n          }}\n          error={error ? true : false}\n          helperText={error ? error : ''}\n          type={typeField}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label={label}\n          name={name}\n          inputRef={validations}\n          defaultValue={defaultValue}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TextFieldX;\n","import React from 'react';\nimport { Grid, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n/**\n * @summary Input to capture password, includes icon\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {string} name Input name\n * @param {Array} error Error provided by {@link https://react-hook-form.com/|React Hook Form} library\n * @param {string} label Input text\n * @param {func} validations Validations (register) provided by {@link https://react-hook-form.com/|React Hook Form} library\n *\n * @example\n * import { useForm } from 'react-hook-form';\n * const { register, errors, handleSubmit } = useForm();\n *\n * <TextFieldPasswordX\n *  label=\"Contraseña*\"\n *  name=\"password\"\n *  error={errors?.password?.message}\n *  validations={register({ ...passwordRule })}\n * />\n */\n\nconst TextFieldPasswordX = ({ name, error, label, validations }) => {\n  const [data, setData] = React.useState({\n    colorIcon: 'inherit',\n    showPassword: false,\n  });\n  const handleClickShowPassword = () => {\n    setData({ ...data, showPassword: !data.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const onPaste = (e) => {\n    e.preventDefault();\n    return false;\n  };\n\n  const onCopy = (e) => {\n    e.preventDefault();\n    return false;\n  };\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={2} sm={1}>\n        <LockOutlinedIcon color={error ? 'error' : data.colorIcon} />\n      </Grid>\n      <Grid item xs={10} sm={11}>\n        <TextField\n          onPaste={onPaste}\n          onCopy={onCopy}\n          onChange={() => {\n            !error && setData({ ...data, colorIcon: 'primary' });\n          }}\n          onFocus={() => {\n            !error && setData({ ...data, colorIcon: 'primary' });\n          }}\n          onBlur={() => {\n            !error && setData({ ...data, colorIcon: 'inherit' });\n          }}\n          error={error ? true : false}\n          helperText={error ? error : ''}\n          type={data.showPassword ? 'text' : 'password'}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label={label}\n          name={name}\n          inputRef={validations}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {data.showPassword ? (\n                    <Visibility color={error ? 'error' : data.colorIcon} />\n                  ) : (\n                    <VisibilityOff color={error ? 'error' : data.colorIcon} />\n                  )}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TextFieldPasswordX;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\n\n/**\n * @summary Dynamic snackbar, provide a message after a request\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {Object} data The data general contain the message, type and boolean snackbar\n * @param {string} data.messageX Snackbar message\n * @param {('success'| 'warning'| 'info'| 'error')} data.typeX Snackbar type\n * @param {bool} data.openX The const true, to show the snackbar\n * @param {func} handleClose Funct to handle the const openX\n *\n * @example\n * <SnackbarX\n *  data={snackbar}\n *  handleClose={handleClose}\n * />\n */\n\nconst SnackbarX = ({ data, handleClose }) => {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  return (\n    <Snackbar\n      open={data.openX}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n    >\n      <Alert onClose={handleClose} severity={data.typeX}>\n        {data.messageX}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default SnackbarX;\n\nSnackbarX.propTypes = {\n  data: PropTypes.shape({\n    messageX: PropTypes.string.isRequired,\n    typeX: PropTypes.string.isRequired,\n    openX: PropTypes.bool.isRequired,\n  }),\n  handleClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n/**\n * @summary Dynamic submit button\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {string} text Button message\n * @param {('default'| 'inherit'| 'primary'| 'secondary')} [color = 'secondary'] Button color\n *\n * @example\n * <ButtonSubmitX text=\"Update\" />\n * <ButtonSubmitX text=\"Delete\" color=\"primary\" />\n */\nconst ButtonSubmitX = ({ text }) => {\n  const classes = useStyles();\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      className={classes.submit}\n    >\n      {text}\n    </Button>\n  );\n};\n\nexport default ButtonSubmitX;\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  },\n}));\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\n/**\n * @summary Grid to center, recommended to log in and register\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {node} children The content of the component\n * @param {number} [spacing = 0] Space between elements\n * @example\n * <GridCenterX>\n *   <h1>Testing</h1>\n * </GridCenterX>\n */\nconst GridCenterX = ({ children, spacing = 0 }) => {\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justify=\"center\"\n      spacing={spacing}\n      style={{ minHeight: '100vh' }}\n    >\n      {children}\n    </Grid>\n  );\n};\n\nexport default GridCenterX;\n","import React, { Fragment } from 'react';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst ProgressX = ({ show = false }) =>\n  show ? <LinearProgress /> : <Fragment />;\nexport default ProgressX;\n","import React from 'react';\nimport { Avatar, Box, makeStyles } from '@material-ui/core';\nimport './circle.css';\n\nconst AvatarCircle = () => {\n  const classes = useStyles();\n  return (\n    <div className=\"contain\">\n      <div className=\"topRight\">\n        <Avatar\n          className={classes.large}\n          style={{\n            background: 'linear-gradient(45deg, #2196F3 16%, #21CBF3 31%)',\n          }}\n          children={<Box />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarCircle;\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: theme.spacing(40),\n    height: theme.spacing(40),\n  },\n}));\n","import React from 'react';\nimport { Card } from '@material-ui/core';\n/**\n * @summary Transparent card, show content's card\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n *\n * @example\n * <CardTrans>\n *\n * </CardTrans>\n */\nconst CardTrans = ({ children }) => {\n  return (\n    <Card\n      style={{\n        background: 'transparent',\n        borderTopRightRadius: '2rem',\n        boxShadow: 'none',\n      }}\n    >\n      {children}\n    </Card>\n  );\n};\n\nexport default CardTrans;\n","export default __webpack_public_path__ + \"static/media/logo.795bd3db.png\";","import React from 'react';\nimport { CardMedia } from '@material-ui/core';\nimport logo from '../../assets/img/logo.png';\n\nconst LogoAuth = () => {\n  return (\n    <CardMedia\n      style={{\n        height: '5rem',\n        backgroundSize: 'contain',\n      }}\n      image={logo}\n      title=\"logo\"\n    />\n  );\n};\n\nexport default LogoAuth;\n","import React from 'react';\n/**\n * ## Custom Hook to handle snackbar\n * Handle the state of the snackbar, also returns a function that the component needs\n *\n * @module useSnackbar\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @example const { handleClose, setSnackbar, snackbar } = useSnackbar();\n */\nconst useSnackbar = () => {\n  const handleClose = (event, reason) => {\n    reason !== 'clickaway' && setSnackbar({ ...snackbar, openX: false });\n  };\n\n  const [snackbar, setSnackbar] = React.useState({\n    openX: false,\n    messageX: '',\n    typeX: '',\n  });\n\n  return { handleClose, snackbar, setSnackbar };\n};\n\nexport default useSnackbar;\n","export const SET_USER = 'SET_USER';\n\nexport const setUserAction = (payload) => {\n  return {\n    type: SET_USER,\n    payload: payload,\n  };\n};","import React from 'react';\nimport { CardHeader } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n/**\n * @summary Card header, show title and subtitle, optional handwriting\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {string} titleX Card title\n * @param {string} subtitleX Card subtitle\n * @param {bool} [variantX=false] Show title in handwritten if true\n *\n * @example\n * <CardHeaderX\n *  titleX=\"Testing title\"\n *  subtitleX=\"Testing subtitle\"\n * />\n */\nconst CardHeaderX = ({ titleX, subtitleX, variantX = false }) => {\n  let style = { align: 'center', color: 'primary' };\n\n  variantX && (style = { ...style, variant: 'h4' });\n\n  return (\n    <CardHeader\n      title={titleX}\n      titleTypographyProps={{\n        ...style,\n      }}\n      subheader={subtitleX}\n      subheaderTypographyProps={{\n        variant: 'subtitle2',\n        align: 'center',\n      }}\n    />\n  );\n};\n\nexport default CardHeaderX;\n\nCardHeaderX.propTypes = {\n  titleX: PropTypes.string.isRequired,\n  subtitleX: PropTypes.string.isRequired,\n  variantX: PropTypes.bool,\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport {\n  Grid,\n  Container,\n  CardContent,\n  Divider,\n} from '@material-ui/core';\nimport MailOutlineOutlinedIcon from '@material-ui/icons/MailOutlineOutlined';\n\nimport { emailRule, passwordRule } from '../../../data/rules';\n\nimport TextFieldX from '../../../components/TextFieldX';\nimport TextFieldPasswordX from '../../../components/TextFieldPasswordX';\nimport SnackbarX from '../../../components/SnackbarX';\nimport ButtonSubmitX from '../../../components/ButtonSubmitX';\nimport GridCenterX from '../../../components/GridCenterX';\nimport ProgressX from '../../../components/ProgressX';\nimport AvatarCircle from '../../../components/avatar/AvatarCircle';\nimport CardTrans from '../../../components/card/CardTrans';\nimport LogoAuth from '../../../components/logoAuth/LogoAuth';\nimport useSnackbar from '../../../hooks/useSnackbar';\nimport { useDispatch } from 'react-redux';\nimport { setUserAction } from '../../../redux/actions/userAction';\nimport CardHeaderX from '../../../components/card/CardHeaderX';\n\nconst LoginView = () => {\n  const history = useHistory();\nconst dispatch = useDispatch()\n  const { register, errors, handleSubmit } = useForm();\n  const { handleClose, setSnackbar, snackbar } = useSnackbar();\nconst [loading, setLoading] = React.useState(false)\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    setLoading(true)\n    if(data.email !== 'upax@email.com'){\n      setSnackbar({\n        openX: true,\n        messageX: 'Email incorrect',\n        typeX: 'warning',\n      });\n      setLoading(false)\n    }else{\n      setTimeout(() => {\n        dispatch(setUserAction(data))\n        setSnackbar({\n          openX: true,\n          messageX: 'Session started',\n          typeX: 'success',\n        });\n        localStorage.setItem('token', true);\n        localStorage.setItem('email', data.email);\n        history.replace('/employees');\n        setLoading(true)\n      }, 1000);\n    }\n    \n  };\n\n\n  return (\n    <Container>\n      <SnackbarX data={snackbar} handleClose={handleClose} />\n      <GridCenterX>\n        <Grid item xs={12} sm={10} md={6} lg={5} xl={5}>\n          <CardTrans>\n            <AvatarCircle />\n            <CardHeaderX\n              titleX=\"Log in\"\n              subtitleX=\"Login with your personal information\"\n            />\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <CardContent>\n                <LogoAuth />\n                <TextFieldX\n                  pasteDisable={true}\n                  copyDisable={true}\n                  error={errors?.email?.message}\n                  name=\"email\"\n                  typeField=\"email\"\n                  label=\"Email*\"\n                  componentIcon={MailOutlineOutlinedIcon}\n                  validations={register({ ...emailRule })}\n                />\n\n                <TextFieldPasswordX\n                  label=\"Password*\"\n                  name=\"password\"\n                  error={errors?.password?.message}\n                  validations={register({ ...passwordRule })}\n                />\n\n                <ProgressX show={loading} />\n                <ButtonSubmitX text=\"Log in\" />\n                <Divider />\n              </CardContent>\n            </form>\n          </CardTrans>\n        </Grid>\n      </GridCenterX>\n    </Container>\n  );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport { Card, Grid } from '@material-ui/core';\nimport CardHeaderX from './CardHeaderX';\nimport PropTypes from 'prop-types';\n/**\n * @summary Main card, show the total card, title and subtitle\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {string} titleX Card title\n * @param {string} subtitleX Card subtitle\n *\n * @example\n * <CardMainX\n *  titleX=\"Testing title\"\n *  subtitleX=\"Testing subtitle\"\n * />\n */\nconst CardMainX = ({ titleX, subtitleX }) => {\n  return (\n    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n      <Card style={{ background: 'transparent', boxShadow: 'none' }}>\n        <CardHeaderX titleX={titleX} subtitleX={subtitleX} variantX={true} />\n      </Card>\n    </Grid>\n  );\n};\n\nexport default CardMainX;\n\nCardMainX.propTypes = {\n  titleX: PropTypes.string.isRequired,\n  subtitleX: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\nimport { URL } from './url';\n\nexport default axios.create({\n  baseURL: URL,\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n","export const URL = 'https://6edeayi7ch.execute-api.us-east-1.amazonaws.com/v1/';","/**\n * ## Custom Hook to handle the errors\n * Handle the errors of an axios request, assign them to the snackbar object\n *\n * @module useAxiosError\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {function} setSnackbar Assign values to the snackbar\n *\n * @example const { checkError } = useAxiosError({ setSnackbar });\n */\n\nconst useAxiosError = ({ setSnackbar }) => {\n  /**\n   * @summary Make a request, setter progress bar, validation in case of error and use dynamic success method\n   * @memberof module:useAxiosError\n   *\n   * @param {Object} e Error generated by axios request\n   * @param {Object} errors Error message object\n   * @example checkError(e, errors);\n   */\n  const checkError = (e, errors) => {\n    let message = errors.eUn;\n    let status = e.response.status;\n    status === 400\n      ? (message = errors.e400)\n      : status === 404\n      ? (message = errors.e404)\n      : status === 500 && (message = errors.e500);\n\n    setSnackbar({\n      openX: true,\n      messageX: message,\n      typeX: 'warning',\n    });\n  };\n\n  return { checkError };\n};\n\nexport default useAxiosError;\n","import { useEffect, useRef } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMounted;\n","//Add validation to cancel request if component is dismounted\n\nimport axios from 'axios';\n\nconst axiosCancelToken = () => {\n  // cancelToken and source declaration\n  const CancelToken = axios.CancelToken;\n  let source = CancelToken.source();\n  source && source.cancel('Operation canceled due to new request.');\n  // save the new request for cancellation\n  source = axios.CancelToken.source();\n  return source;\n};\n\nexport default axiosCancelToken;\n","import React from 'react';\nimport API from '../data/api';\nimport useAxiosError from '../hooks/useAxiosError';\nimport useSnackbar from '../hooks/useSnackbar';\nimport useIsMounted from './useIsMounted';\nimport axiosCancelToken from '../data/axiosCancelToken';\n/**\n * ## Custom Hook to request\n * Request to API REST, manage a snack bar and loading bar\n * Depend on {@link https://github.com/axios/axios/|Axios}\n *\n * @module useAxios\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @param {string} url api url\n *\n * @example const { apiAxios, snackbar, handleClose, loading } = useAxios('api/login');\n */\nconst useAxios = (url) => {\n  const { handleClose, setSnackbar, snackbar } = useSnackbar();\n  const { checkError } = useAxiosError({ setSnackbar });\n  const [loading, setloading] = React.useState(false);\n  const source = axiosCancelToken();\n  const isMounted = useIsMounted();\n  const isMountedLoad = () => isMounted.current && setloading(false);\n\n  /**\n   * @summary Make a request, setter progress bar, validation in case of error and use dynamic success method\n   * @memberof module:useAxios\n   *\n   * @param {('get'|'post'|'put'|'delete')} method Request methods\n   * @param {Array} data Parameters to send\n   * @param {function} success Function if the answer is successful\n   * @param {Array} errors  Message array if response failed\n   *\n   * @example apiAxios('post', data, success, errorLogin);\n   */\n  const apiAxios = (method, data, success, errors, rest) => {\n    isMounted.current && setloading(true);\n    API(url, {\n      method: method,\n      data: data,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      cancelToken: source.token,\n    })\n      .then((r) => {\n        success(r);\n        isMountedLoad();\n      })\n      .catch((e) => {\n        checkError(e, errors);\n        isMountedLoad();\n      });\n  };\n\n  return { apiAxios, setSnackbar, snackbar, handleClose, loading };\n};\n\nexport default useAxios;\n","const msg500 = 'Error 500, intente más tarde ';\nconst msg404 = 'Error 404, intente más tarde ';\nconst msg400 = 'Error 400, datos invalidos o incompletos';\nconst msgUn = 'Error no identificado, intente más tarde ';\n\nexport const errorLogin = {\n  e500: msg500 + '(Iniciar sesión)',\n  e404: msg404 + '(Iniciar sesión)',\n  e400: msg400 + '(Iniciar sesión)',\n  eUn: msgUn + '(Iniciar sesión)',\n};\n\nexport const errorReadEmployees = {\n  e500: msg500 + '(Mostrar empleados)',\n  e404: msg404 + '(Mostrar empleados)',\n  e400: msg400 + '(Mostrar empleados)',\n  eUn: msgUn + '(Mostrar empleados)',\n};\n\nexport const errorCreateEmployee = {\n  e500: msg500 + '(Registrar empleado)',\n  e404: msg404 + '(Registrar empleado)',\n  e400: msg400 + '(Registrar empleado)',\n  eUn: msgUn + '(Registrar empleado)',\n};","export const SET_EMPLOYEES = 'SET_EMPLOYEES';\r\nexport const ADD_EMPLOYEE = 'ADD_EMPLOYEE';\r\nexport const RESET_EMPLOYEES = 'RESET_EMPLOYEES';\r\n\r\nexport const setEmployeesAction = (payload) => {\r\n    return {\r\n        type: SET_EMPLOYEES,\r\n        payload: payload,\r\n    };\r\n};\r\n\r\nexport const addEmployeeAction = (payload) => {\r\n    return {\r\n        type: ADD_EMPLOYEE,\r\n        payload: payload,\r\n    };\r\n};\r\n\r\nexport const resetEmployeeAction = () => {\r\n    return {\r\n        type: RESET_EMPLOYEES,\r\n    };\r\n};\r\n","import React from 'react'\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Card, Grid } from '@material-ui/core';\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nimport useAxios from '../../hooks/useAxios';\r\nimport ProgressX from '../../components/ProgressX';\r\nimport { errorReadEmployees } from '../../data/errors';\r\nimport CardHeaderX from '../../components/card/CardHeaderX';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setEmployeesAction } from '../../redux/actions/employeeAction';\r\nimport moment from 'moment';\r\n\r\nconst TableEmployee = () => {\r\n    const employeeReducer = useSelector((state) => state.employeeReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [employees, setEmployees] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n\r\n    // Para llevar a cabo las peticiones, se creo un customhook, el cual maneja\r\n    // los errores http comunes, ademas de una barra de carga, asi como una \r\n    // alerta flotante llamada Snackbar, de esa manera solo pasamos los parametros necesarios\r\n    // a la funcion apiAxios\r\n    \r\n    const {\r\n        apiAxios,\r\n        loading,\r\n    } = useAxios('examen/employees/alfredo_castaneda');\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID' },\r\n        { field: 'name', headerName: 'First name', width: 350, },\r\n        { field: 'last_name', headerName: 'Last name', width: 350, },\r\n        { field: 'birthday', headerName: 'Birthday', width: 350, }\r\n    ];\r\n\r\n    const cancelSearch = () => {\r\n        setSearch(\"\");\r\n        requestSearch(search);\r\n    };\r\n\r\n    const requestSearch = (searchedVal) => {\r\n        const filteredEmployees = employeeReducer.employees.filter((row) => {\r\n            return row.name.toLowerCase().includes(searchedVal.toLowerCase());\r\n        });\r\n        setEmployees(filteredEmployees);\r\n    };\r\n\r\n    const convertAndFormatToDate = (date) => moment(date).format('YYYY-MM-DD')\r\n\r\n    React.useEffect(() => {\r\n        const success = (r) => {\r\n            let auxEmployees = r.data.data.employees\r\n            let employeesWithDate = auxEmployees.map((employee) => ({ ...employee, birthday: convertAndFormatToDate(employee.birthday) }) )\r\n            dispatch(setEmployeesAction(employeesWithDate));\r\n            setEmployees(employeesWithDate);\r\n        };\r\n        apiAxios('get', {}, success, errorReadEmployees);\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Grid item sm={12} md={6} lg={6} >\r\n            <Card>\r\n                <CardHeaderX\r\n                    titleX=\"Employee table\"\r\n                    subtitleX=\"You can filter by First Name\"\r\n                />\r\n                <ProgressX show={loading} />\r\n                <SearchBar\r\n                    placeholder=\"Enter First Name\"\r\n                    value={search}\r\n                    onChange={(searchVal) => requestSearch(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                />\r\n                <div style={{ height: 640, width: '100%', marginTop: '20px' }}>\r\n                    <DataGrid\r\n                        rows={employees}\r\n                        columns={columns}\r\n                        pageSize={10}\r\n                        rowsPerPageOptions={[10]}\r\n                        checkboxSelection\r\n                        disableSelectionOnClick\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TableEmployee\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core'\r\n\r\nimport moment from 'moment';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ProgressX from '../../components/ProgressX'\r\nimport TextFieldX from '../../components/TextFieldX';\r\nimport ButtonSubmitX from '../../components/ButtonSubmitX';\r\nimport CardHeaderX from '../../components/card/CardHeaderX';\r\nimport SnackbarX from '../../components/SnackbarX';\r\n\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { firstAndSecondNameRule } from '../../data/rules';\r\nimport { errorCreateEmployee } from '../../data/errors';\r\n\r\nimport { addEmployeeAction } from '../../redux/actions/employeeAction';\r\n\r\n\r\nconst CreateEmployee = () => {\r\n    const dispatch = useDispatch();\r\n    const employeeReducer = useSelector((state) => state.employeeReducer);\r\n    const { register, errors, handleSubmit, reset  } = useForm();\r\n    const [date, setDate] = React.useState(new Date());\r\n    const formatDate = (date) => moment(date).format('YYYY/MM/DD')\r\n\r\n    // Para llevar a cabo las peticiones, se creo un customhook, el cual maneja\r\n    // los errores http comunes, ademas de una barra de carga, asi como una \r\n    // alerta flotante llamada Snackbar, de esa manera solo pasamos los parametros necesarios\r\n    // a la funcion apiAxios\r\n    \r\n    const {\r\n        apiAxios,\r\n        loading,\r\n        snackbar,\r\n        setSnackbar,\r\n        handleClose\r\n    } = useAxios('examen/employees/alfredo_castaneda');\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault();\r\n        let params = { ...data,\r\n            id: employeeReducer.employees.length + 1,\r\n            birthday: formatDate(date)\r\n        }\r\n\r\n        const successResponse = (response) => {\r\n            reset()\r\n            dispatch(addEmployeeAction(params));\r\n            setSnackbar({\r\n                openX: true,\r\n                messageX: 'Employee created successfully',\r\n                typeX: 'success',\r\n            });\r\n        }\r\n        \r\n        apiAxios('post', params, successResponse, errorCreateEmployee);\r\n    };\r\n    \r\n    return (\r\n        <Grid item sm={12} md={6} lg={6} >\r\n            <SnackbarX data={snackbar} handleClose={handleClose} />\r\n            <Card>\r\n                <CardHeaderX\r\n                    titleX=\"Create an employee\"\r\n                    subtitleX=\"Enter the necessary data to create an employee\"\r\n                />\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <CardContent>\r\n\r\n                        <TextFieldX\r\n                            error={errors?.name?.message}\r\n                            name=\"name\"\r\n                            typeField=\"text\"\r\n                            label=\"Name*\"\r\n                            componentIcon={PersonIcon}\r\n                            validations={register({ ...firstAndSecondNameRule })}\r\n                        />\r\n\r\n                        <TextFieldX\r\n                            error={errors?.last_name?.message}\r\n                            name=\"last_name\"\r\n                            typeField=\"text\"\r\n                            label=\"Last Name*\"\r\n                            componentIcon={PersonIcon}\r\n                            validations={register({ ...firstAndSecondNameRule })}\r\n                        />\r\n                        <Divider />\r\n                        <MuiPickersUtilsProvider utils={MomentUtils} locale=\"es\">\r\n                            <Typography variant=\"subtitle2\">Enter the date of your birthday</Typography>\r\n                            <DatePicker\r\n                                autoOk\r\n                                orientation=\"landscape\"\r\n                                variant=\"static\"\r\n                                openTo=\"date\"\r\n                                value={date}\r\n                                onChange={setDate}\r\n                                format=\"YYYY-MM-DD\"\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <ProgressX show={loading} />\r\n                        <ButtonSubmitX text=\"Create employee\" />\r\n            \r\n                    </CardContent>\r\n                </form>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CreateEmployee\r\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport CardMainX from '../../components/card/CardMainX';\nimport TableEmployee from './TableEmployee';\nimport CreateEmployee from './CreateEmployee';\n\nconst ViewEmployee = () => {\n\n  return (\n    <Grid container spacing={2}>\n      <CardMainX titleX=\"Employees\" subtitleX=\"Employee Page\" />\n      <TableEmployee/>\n      <CreateEmployee/>\n    </Grid>\n  )\n  \n};\n\nexport default ViewEmployee;","import React, { useState } from 'react'\r\n\r\nimport { Card, Grid } from '@material-ui/core'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\nimport CardMainX from '../../components/card/CardMainX';\r\nimport CardHeaderX from '../../components/card/CardHeaderX';\r\n\r\nimport './UploadImages.css'\r\n\r\nconst UploadImages = () => {\r\n    const [images, setImages] = useState([])\r\n    const [current, setCurrent] = useState(0);\r\n    const nextSlide = () =>  setCurrent(current === images.length - 1 ? 0 : current + 1);\r\n    const prevSlide = () => setCurrent(current === 0 ? images.length - 1 : current - 1);\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: \"image/*\",\r\n        onDrop: (acceptedFiles) => {\r\n            setImages([...images,\r\n            ...acceptedFiles.map((image) => Object.assign(image, {\r\n                preview: URL.createObjectURL(image)\r\n            }))\r\n            ])\r\n        }\r\n    })\r\n\r\n    const arrayImages = images.map((image, index) => (\r\n         <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && <img src={image.preview} alt=\"preview\" className=\"image\" /> }\r\n          </div>\r\n    ))\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <CardMainX titleX=\"Drag and Drop\" subtitleX=\"Drop here all the images you want\" />\r\n            <Grid item sm={12} md={6} lg={6} >\r\n                <Card>\r\n                    <CardHeaderX\r\n                        titleX=\"Drag the images you want here\"\r\n                        subtitleX=\"\"\r\n                    />\r\n                    <div {...getRootProps()} >\r\n                        <input {...getInputProps} style={{ backgroundColor: '#4f67ef', height: '150px', width: '100%' }} />\r\n                    </div>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item sm={12} md={6} lg={6} >\r\n                <Card>\r\n                    <CardHeaderX\r\n                        titleX=\"Images\"\r\n                        subtitleX=\"Here you can see all your images\"\r\n                    />\r\n                    <section className='slider'>\r\n                        <ArrowBackIosIcon className='left-arrow' onClick={prevSlide} />\r\n                        <ArrowForwardIosIcon className='right-arrow' onClick={nextSlide} />\r\n                        {arrayImages}\r\n                    </section>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default UploadImages\r\n\r\n","import React from 'react';\n\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport ViewEmployee from '../views/employee/ViewEmployee';\nimport UploadImages from '../views/upload/UploadImages';\n\nconst Container = () => {\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path=\"/employees\" component={ViewEmployee} />\n        <Route path=\"/upload\" component={UploadImages} />\n        <Redirect to=\"/employees\" />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useHistory } from 'react-router-dom';\n/**\n * @summary Button to log out and send to log in\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @example <TheButtonLogOut />\n */\nconst TheButtonLogOut = () => {\n  const history = useHistory();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"email\");\n    history.replace('/login');\n  };\n\n  return (\n    <Tooltip title=\"Cerrar sesion\" aria-label=\"cerrar sesion\">\n      <IconButton aria-label=\"cerrar sesion\" onClick={handleLogout}>\n        <PowerSettingsNewIcon style={{ color: 'white' }} />\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default TheButtonLogOut;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SnackbarX from '../SnackbarX';\nimport TheButtonLogOut from './TheButtonLogOut';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    [theme.breakpoints.up('lg')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n}));\n/**\n * @summary Navigation bar to help the user to access the information.\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @example <TheNavbar openDrawerAction={openDrawerAction} />\n */\nconst TheNavbar = (props) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    reason !== 'clickaway' && setSnackbar({ ...snackbar, openX: false });\n  };\n\n  const [snackbar, setSnackbar] = React.useState({\n    openX: false,\n    messageX: '',\n    typeX: '',\n  });\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color=\"inherit\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              props.openDrawerAction();\n            }}\n            style={{ color: 'white' }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            style={{ color: 'white' }}\n          ></Typography>\n          <TheButtonLogOut />\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      <SnackbarX data={snackbar} handleClose={handleClose} />\n    </React.Fragment>\n  );\n};\n\nexport default TheNavbar;\n","import React from 'react';\nimport { List, ListItemIcon, ListItem, ListItemText } from '@material-ui/core';\nimport { HomeOutlined } from '@material-ui/icons';\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\nimport { Link } from 'react-router-dom';\n/**\n * @summary List used inside the drawer\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @example <TheList />\n */\nconst TheList = () => {\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  return (\n    <React.Fragment>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem\n          button\n          component={Link}\n          to=\"/employees\"\n          selected={selectedIndex === 'employees'}\n          onClick={() => setSelectedIndex('employees')}\n        >\n          <ListItemIcon>\n            <HomeOutlined />\n          </ListItemIcon>\n          <ListItemText primary=\"Employees\" />\n        </ListItem>\n\n\n        <ListItem\n          button\n          component={Link}\n          to=\"/upload\"\n          selected={selectedIndex === 'upload'}\n          onClick={() => setSelectedIndex('upload')}\n        >\n          <ListItemIcon>\n            <BuildOutlinedIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Upload\" />\n        </ListItem>\n      </List>\n    </React.Fragment>\n  );\n};\nexport default TheList;\n","import React, { useEffect } from 'react';\nimport {\n  makeStyles,\n  Drawer,\n  Divider,\n  Avatar,\n  ListItemText,\n  ListItem,\n  ListItemIcon,\n} from '@material-ui/core';\nimport TheList from './TheList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserAction } from '../../redux/actions/userAction';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    color: theme.palette.getContrastText('#C3C9E8'),\n    backgroundColor: '#C3C9E8',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n/**\n * @summary Component found on the left side of the page\n * @memberof module:Components\n *\n * @version 1.0\n * @author Alfredo Castañeda Porcayo <alfredocaspor1997@gmail.com>\n *\n * @example\n * <TheDrawer\n *  variant=\"permanent\"\n *  open={true}\n * />\n *\n * <TheDrawer\n *  variant=\"temporary\"\n *  open={openDrawer}\n *  onClose={openDrawerAction}\n * />\n */\nconst TheDrawer = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const userReducer = useSelector((state) => state.userReducer);\n\n  useEffect(() => {\n    let user = { email: localStorage.getItem('email') };\n    dispatch(setUserAction(user));\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant={props.variant}\n      open={props.open}\n      onClose={props.onClose ? props.onClose : null}\n      anchor=\"left\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.toolbar}>\n        <div className={classes.root}>\n          {userReducer.user.length !== 0 && (\n            <ListItem>\n              <ListItemIcon>\n                <Avatar className={classes.avatar}>\n                  {userReducer.user.email.charAt(0)}\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText primary={userReducer.user.email} />\n            </ListItem>\n          )}\n        </div>\n      </div>\n      <Divider />\n      <TheList />\n    </Drawer>\n  );\n};\n\nexport default TheDrawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Hidden, makeStyles } from '@material-ui/core';\nimport TheNavbar from '../components/the/TheNavbar';\nimport TheDrawer from '../components/the/TheDrawer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n  },\n}));\n\nconst Squema = () => {\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n\n  const openDrawerAction = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  return (\n    <React.Fragment>\n      <TheNavbar openDrawerAction={openDrawerAction} />\n      <Hidden mdDown>\n        <TheDrawer variant=\"permanent\" open={true} />\n      </Hidden>\n      <Hidden lgUp>\n        <TheDrawer\n          variant=\"temporary\"\n          open={openDrawer}\n          onClose={openDrawerAction}\n        />\n      </Hidden>\n    </React.Fragment>\n  );\n};\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      {localStorage.getItem('token') ? (\n        <div className={classes.root}>\n          <Squema />\n          <div className={classes.content}>\n            <div className={classes.toolbar}></div>\n            <Route\n              {...rest}\n              component={(props) => (\n                <Component {...props}/>\n              )}\n            />\n          </div>\n        </div>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    <div>\n      {!localStorage.getItem(\"token\") ? (\n        <Route {...rest} component={(props) => <Component {...props} />} />\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </div>\n  );\n};\n\nPublicRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { HashRouter  as Router, Switch } from 'react-router-dom';\n\nimport LoginView from '../views/authentication/login/LoginView';\n\nimport DashboardRoutes from './DashboardRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute exact path=\"/login\" component={LoginView} />\n        <PrivateRoute path=\"/\" component={DashboardRoutes} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import {\n  SET_USER\n} from '../actions/userAction.js';\n\nconst data = {\n  user: {\n    name: '',\n    email: '',\n  },\n};\n\nconst userReducer = (state = data, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\r\n    SET_EMPLOYEES,\r\n    RESET_EMPLOYEES,\r\n    ADD_EMPLOYEE\r\n} from '../actions/employeeAction';\r\n\r\nconst data = {\r\n    employees: []\r\n};\r\n\r\nconst userReducer = (state = data, action) => {\r\n    switch (action.type) {\r\n        case SET_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                employees: action.payload,\r\n            };\r\n        case ADD_EMPLOYEE:\r\n            return {\r\n                ...state,\r\n                employees: [...state.employees, action.payload]\r\n            };\r\n        case RESET_EMPLOYEES:\r\n            return data;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport employeeReducer from './employeeReducer'\nconst rootReducers = combineReducers({\n  userReducer,\n  employeeReducer\n});\n\nexport default rootReducers;\n","import { applyMiddleware, createStore } from 'redux';\nimport rootReducers from './reducers/rootReducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import { createTheme  } from '@material-ui/core/styles';\n\nconst font = \"'Rajdhani', sans-serif\";\nconst fontAlternative = \"'Bebas Neue', cursive\";\n\nconst theme = createTheme ({\n  typography: {\n    fontFamily: font,\n    h4: {\n      fontFamily: fontAlternative,\n    },\n    button: { textTransform: 'none' },\n  },\n\n  palette: {\n    type: 'dark',\n    background: {\n      paper: '#090a16',\n      default: '#090a16',\n    },\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      main: '#9fa8da',\n    },\n    error: {\n      main: '#FF4E62',\n    },\n    warning: {\n      main: '#ef6c00',\n    },\n    success: {\n      main: '#3dce9d',\n    },\n    info: {\n      main: '#4f67ef',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport AppRouter from './routes/AppRouter';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nconst App = (props) => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <AppRouter />\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// serviceWorker.register();\n"],"sourceRoot":""}